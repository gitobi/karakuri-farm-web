version: 2.1
executors:
  builder:
    docker:
      - image: circleci/node:8.9.0
    working_directory: ~/repo
  deployer:
    docker:
      - image: circleci/python:3.6.1
    working_directory: ~/repo
commands:
  restore_yarn:
    steps:
      - restore_cache:
          keys:
            - yarn-packages-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - yarn-packages-v1-
  save_yarn:
    steps:
      - save_cache:
          paths:
            - ~/.cache/yarn
          key: yarn-packages-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}
  persist:
    steps:
      - persist_to_workspace:
          root: .
          paths:
            - .
  attach:
    steps:
      - attach_workspace:
          at: .
  set_env:
    parameters:
      local_env:
        type: enum
        enum: ["test.local", "staging-env.local", "production-env.local"]
    steps:
      - run:
          name: Set Env << parameters.local_env >>
          command: |
            TMP_ENV_FILENAME=".env.<< parameters.local_env >>"
            echo "" > ${TMP_ENV_FILENAME}
            echo "REACT_APP_COGNITO_USER_POOL_ID=${BASTET_HOST_URL}" >> ${TMP_ENV_FILENAME}
            echo "REACT_APP_COGNITO_CLIENT_ID=${BASTET_HOST_URL}" >> ${TMP_ENV_FILENAME}

jobs:
  install:
    executor:
      name: builder
    steps:
      - checkout
      - restore_yarn
      - run:
          name: Install dependencies
          command: yarn install --frozen-lockfile
      - save_yarn
      - persist

  test:
    executor:
      name: builder
    steps:
      - attach
      - set_env:
          local_env: test.local
      - run:
          name: Test
          command: yarn test

  deploy:
    executor:
      name: deployer
    parameters:
      release_target:
        type: enum
        enum: ["staging", "prduction"]
      local_env:
        type: enum
        enum: ["staging-env.local", "production-env.local"]
    steps:
      - attach
      - run:
          name: 'Install Deploy Tools'
          command: |
            pip3 install --upgrade --user awscli
            echo 'export PATH=~/.local/bin:$PATH' > ~/.profile && \
            source ~/.profile && \
            aws configure set preview.cloudfront true
      - set_env:
          local_env: << parameters.local_env >>
      - run:
          name: Deploy to << parameters.release_target >>
          command: |
            TMP_SHELL_NAME="deploy-to-<< parameters.release_target >>.sh"
            sh ${TMP_SHELL_NAME}

workflows:
  setup_and_deploy:
    jobs:
      - install
      - test:
          context: Karakuri-Farm-development
          requires:
            - install
      - deploy:
          name: deploy_to_staging
          release_target: staging
          local_env: staging-env.local
          context: Karakuri-Farm-staging
          requires:
            - install
            - test
          # filters:
          #   branches:
          #     only: develop
      - approval_to_production:
          type: approval
          requires:
            - install
            - test
          filters:
            branches:
              only: master
            tags:
              only: /^v[0-9]+(\.[0-9]+){2}.*/
      - deploy:
          name: deploy_to_prduction
          release_target: prduction
          local_env: production-env.local
          context: Karakuri-Farm-production
          requires:
            - approval_to_production
